<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd
       http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
       http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.2.xsd
       http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.2.xsd
       http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.2.xsd">

    <int-amqp:inbound-channel-adapter
        id="reqPinCodeCustTypeSplitterAdapter"
        listener-container="reqPinCodeCustTypeListenerContainer"
        channel="reqPinCodeCustTypeSplitterFilterChannel"
        mapped-request-headers="amqp_redelivered"
        message-converter="amqpJsonMsgConverter"/>
    
    <int:channel id="reqPinCodeCustTypeSplitterFilterChannel">
        <int:interceptors>
            <int:ref bean="defaultDelayRedeliveryChannelInterceptor"/>
        </int:interceptors>
    </int:channel>
    
    <!--If customerType == individual 
    then we need to split payload
    otherwise we just publish it-->
    <int:filter 
        id="reqPinCodeCustTypeSplitterFilter"
        input-channel="reqPinCodeCustTypeSplitterFilterChannel" 
        output-channel="reqPinCodeCustTypeSplitterChannel"
        discard-channel="reqPinCodeCustTypePublisherChannel"
        expression="payload.customerType == T(cat.mnp.pincode.ws.portout.CustomerType).INDIVIDUAL"/>
    
    <int:channel id="reqPinCodeCustTypeSplitterChannel">
        <int:interceptors>
            <int:wire-tap channel="reqPinCodeCustTypeLoggingChannel"/>
        </int:interceptors>
    </int:channel>
    
    <int:logging-channel-adapter 
        id="reqPinCodeCustTypeLoggingChannel"
        logger-name="cat.mnp.pincode.core.splitter.ReqPinCodeCustTypeLogger" level="INFO" 
        expression="'Splitting ' + payload"/>
    <!--TODO: create msg splitter here-->
    <!--Split pincode.custType = individual to multiple msg-->
    <int:splitter id="reqPinCodeCustTypeSplitter" apply-sequence="false"
                  input-channel="reqPinCodeCustTypeSplitterChannel"
                  output-channel="reqPinCodeCustTypePublisherChannel">
        <bean class="cat.mnp.pincode.core.splitter.GeneratePinCodeRequestSplitter"/>
    </int:splitter>
    
    <int:channel id="reqPinCodeCustTypePublisherChannel">
        <int:interceptors>
            <int:wire-tap channel="reqPinCodeCustTypePublisherLoggingChannel"/>
        </int:interceptors>
    </int:channel>
    
    <int:logging-channel-adapter 
        id="reqPinCodeCustTypePublisherLoggingChannel"
        logger-name="cat.mnp.pincode.core.splitter.ReqPinCodeCustTypePublisherLogger" level="INFO" 
        expression="'Publishing ' + payload"/>
    
    <int:chain id="reqPinCodeCustTypePublisher"
               input-channel="reqPinCodeCustTypePublisherChannel">
        <int-amqp:outbound-channel-adapter
            amqp-template="reqPinCodeCustTypeSplitterPublisherRabbitTemplate"
            exchange-name="CheckActivePinCodeMsgFanout"
            lazy-connect="false"/>
    </int:chain>
    
</beans>