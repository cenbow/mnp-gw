<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
       xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd
       http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
       http://www.springframework.org/schema/integration/jdbc http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.2.xsd
       http://www.springframework.org/schema/integration/jms http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.2.xsd
       http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.2.xsd">

    <int-amqp:inbound-channel-adapter
        id="portOutReqImporterAdapter"
        listener-container="portOutReqListenerContainer"
        channel="portOutReqImporterChannel"
        mapped-request-headers="amqp_redelivered"
        message-converter="amqpJsonMsgConverter"/>
    
    <int:channel id="portOutReqImporterChannel">
        <int:interceptors>
            <int:ref bean="defaultDelayRedeliveryChannelInterceptor"/>
            <int:wire-tap channel="portOutReqLoggingChannel"/>
        </int:interceptors>
    </int:channel>
    
    <int:logging-channel-adapter 
        id="portOutReqLoggingChannel"
        logger-name="cat.mnp.pincode.core.importer.PortOutReqLogger" level="INFO" 
        expression="'Importing ' + payload"/>
    
    <int:chain id="portOutReqImporter"
               input-channel="portOutReqImporterChannel"
               output-channel="portOutReqPublishChannel">
        
        <!--Get new orderId from db-->
        <int:header-enricher>
            <int:header name="OrderId" expression="@portOutReqPlGetOrderIdGw.exchange(#root).payload.get('O_ORDER_ID')"/>
        </int:header-enricher>
        
        <!--Split to svc level-->
        <int:splitter>
            <bean class="cat.mnp.pincode.core.splitter.GeneratePinCodeRequestSplitter"/>
        </int:splitter>
        
        <!--Import svc-->
        <int:header-enricher>
            <int:header name="SvcId" expression="@portOutReqPlImptSvcGw.exchange(#root).payload.get('O_SVC_ID')"/>
        </int:header-enricher>
        
        <int:aggregator>
            <bean class="cat.mnp.pincode.core.aggregator.GeneratePinCodeRequestAggregator"/>
        </int:aggregator>
    </int:chain>
    
    <!--Get new orderId-->
    <int:gateway id="portOutReqPlGetOrderIdGw" default-request-channel="portOutReqPlGetOrderIdChannel" />
    <int-jdbc:stored-proc-outbound-gateway
        id="portOutReqPlGetOrderId" 
        request-channel="portOutReqPlGetOrderIdChannel"
        data-source="pinCodeDataSource" stored-procedure-name="PIN_PO_REQ.GET_NEW_PIN"
        ignore-column-meta-data="true" skip-undeclared-results="false">
        <int-jdbc:sql-parameter-definition name="O_ORDER_ID" direction="OUT" type="VARCHAR"/>
    </int-jdbc:stored-proc-outbound-gateway>
    
    <!--Import portOutReq-->
    <int:gateway id="portOutReqPlImptSvcGw" default-request-channel="portOutReqPlImptSvcChannel" />
    <int-jdbc:stored-proc-outbound-gateway
        id="portOutReqPlImptSvc" 
        request-channel="portOutReqPlImptSvcChannel"
        data-source="pinCodeDataSource" stored-procedure-name="PIN_PO_REQ.IMPT_REQ"
        ignore-column-meta-data="true" skip-undeclared-results="false">
        <int-jdbc:sql-parameter-definition name="I_ORDER_ID" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_REF_DOC_NO" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CHANNEL_TYPE" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CUSTOMER_TYPE" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CHANNEL_REF_NO" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_MSISDN" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CONTACT_CHANNEL_TYPE" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CONTACT_EMAIL_ADDRESS" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="I_CONTACT_MSISDN" direction="IN" type="VARCHAR"/>
        <int-jdbc:sql-parameter-definition name="O_SVC_ID" direction="OUT" type="INTEGER"/>
            
        <int-jdbc:parameter name="I_ORDER_ID" expression="headers.OrderId"/>
        <int-jdbc:parameter name="I_REF_DOC_NO" expression="payload.cardNumber"/>
        <int-jdbc:parameter name="I_CHANNEL_TYPE" expression="payload.channelType"/>
        <int-jdbc:parameter name="I_CUSTOMER_TYPE" expression="payload.customerType"/>
        <int-jdbc:parameter name="I_CHANNEL_REF_NO" expression="payload.channelRefNumber"/>
        <int-jdbc:parameter name="I_MSISDN" expression="payload.msisdnList[0]"/>
        <int-jdbc:parameter name="I_CONTACT_CHANNEL_TYPE" expression="payload.contactChannelType"/>
        <int-jdbc:parameter name="I_CONTACT_EMAIL_ADDRESS" expression="payload.contactEmailAddress"/>
        <int-jdbc:parameter name="I_CONTACT_MSISDN" expression="payload.contactMsisdn"/>
    </int-jdbc:stored-proc-outbound-gateway>
    
    <!--Publish to mq-->
    <int:channel id="portOutReqPublishChannel">
        <int:interceptors>
            <int:wire-tap channel="portOutReqPublishLoggingChannel"/>
        </int:interceptors>
    </int:channel>
    <int:logging-channel-adapter 
        id="portOutReqPublishLoggingChannel"
        logger-name="cat.mnp.pincode.core.importer.PortOutReqLogger" level="INFO" 
        expression="'Publishing orderId: ' + headers.OrderId + ', payload: ' + payload"/>
        
    <int-amqp:outbound-channel-adapter
        id="portOutReqPublishAdapter"
        channel="portOutReqPublishChannel"
        amqp-template="portOutReqImporterPublisherRabbitTemplate"
        exchange-name="VerifyPortOutReqMsgFanout"
        mapped-request-headers="OrderId"
        lazy-connect="false"/>
    
</beans>