<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-amqp="http://www.springframework.org/schema/integration/amqp"
       xmlns:int-file="http://www.springframework.org/schema/integration/file"
       xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.2.xsd
       http://www.springframework.org/schema/integration/amqp http://www.springframework.org/schema/integration/amqp/spring-integration-amqp.xsd
       http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file-4.2.xsd
       http://www.springframework.org/schema/integration/mail http://www.springframework.org/schema/integration/mail/spring-integration-mail-4.2.xsd">

    <task:executor 
        id="portingOpsMailExecutor" 
        keep-alive="1" 
        pool-size="1"/>
    
    <!--Email receiver-->
    <int-mail:imap-idle-channel-adapter 
        id="rawPortingOpsEmailImporter"
        store-uri="${mail.imap.store-uri}"
        channel="rawPortingOpsEmailChannel"
        error-channel="errorPortingOpsEmailImporterLoggingChannel"
        auto-startup="true"
        should-delete-messages="false"
        should-mark-messages-as-read="true"
        session="intCatOmMsgBrokerPortingOpsSession"
        mail-filter-expression="subject matches '.*'"
        task-executor="portingOpsMailExecutor">
        <!--<int:transactional synchronization-factory="syncFactory"/>-->
    </int-mail:imap-idle-channel-adapter>
    
    <int:logging-channel-adapter 
        id="errorPortingOpsEmailImporterLoggingChannel"
        logger-name="cat.mnp.email.PortingOpsLogger" level="ERROR" 
        expression="'Error during importing email; headers:  ' + headers + ', payload: ' + payload"/>
    
<!--    <int:transaction-synchronization-factory id="syncFactory">
        <int:after-commit expression="@emailTransformer.transform(payload)" channel=""/>
        <int:after-rollback expression="" channel=""/>
    </int:transaction-synchronization-factory>-->

    <!--    <util:properties id="javaMailProperties">
        <prop key="mail.imap.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
        <prop key="mail.imap.socketFactory.fallback">false</prop>
        <prop key="mail.store.protocol">imaps</prop>
        <prop key="mail.store.protocol">pop3</prop>
        <prop key="mail.debug">true</prop>
    </util:properties>-->
    
    <int:channel id="rawPortingOpsEmailChannel"/>

    <int:chain id="portingOpsEmailReader" 
               input-channel="rawPortingOpsEmailChannel" 
               output-channel="allPortingOpsEmailAttachmentChannel">
        <!--Extract attachement-->
        <int:transformer>
            <bean id="emailTransformer" class="cat.mnp.email.support.EmailTransformer"/>
        </int:transformer>
        <int:splitter>
            <bean id="emailSplitter" class="cat.mnp.email.support.EmailSplitter" init-method="init">
                <property name="monthFormat" value="yyyy-MM"/>
                <property name="dateFormat" value="yyyy-MM-dd_HH.mm.ss.SSS"/>
            </bean>
        </int:splitter>
    </int:chain>
    
    <int:channel id="allPortingOpsEmailAttachmentChannel"/>
    
    <!--Filter for xlsx-->
    <int:filter 
        id="xlsxPortingOpsFilter"
        input-channel="allPortingOpsEmailAttachmentChannel" 
        output-channel="xlsxPortingOpsPublisherChannel"
        discard-channel="discardedPortingOpsEmailAttachmentLoggingChannel"
        expression="headers.file_name matches '^.*\.xlsx$'"/>
    
    <int:logging-channel-adapter 
        id="discardedPortingOpsEmailAttachmentLoggingChannel"
        logger-name="cat.mnp.email.PortingOpsLogger" level="DEBUG" 
        expression="'Discard email attachment: ' + headers.mail_attachment_backup_directory"/>

    <int:channel id="xlsxPortingOpsPublisherChannel">
        <int:interceptors>
            <int:wire-tap channel="saveXlsxPortingOpsEmailAttachmentLoggingChannel"/>
        </int:interceptors>
    </int:channel>
    
    <int:logging-channel-adapter 
        id="saveXlsxPortingOpsEmailAttachmentLoggingChannel"
        logger-name="cat.mnp.email.PortingOpsLogger" level="INFO" 
        expression="'Saving ' + headers.file_name + ' to ${mail.file.path}/Inbound/PortingOps/' + headers.file_name.split('_')[0].toUpperCase() + '/' + @localDateTimeFormatterSupport.format('yyyy-MM') + '/' + @localDateTimeFormatterSupport.format('yyyy-MM-dd')"/>
    
    <int:chain id="xlsxPortingOpsPublisher" 
               input-channel="xlsxPortingOpsPublisherChannel">
        <!--Preparing to publish to RabbitMq-->
        <int:header-enricher>
            <int:header name="MsgType" expression="headers.file_name.split('_')[0].toUpperCase()"/>
        </int:header-enricher>
        
        <!--Backup xlsx-->
        <int-file:outbound-gateway 
            auto-create-directory="true" 
            directory-expression="'${mail.file.path}/Inbound/PortingOps/' + headers.MsgType + '/' + @localDateTimeFormatterSupport.format('yyyy-MM') + '/' + @localDateTimeFormatterSupport.format('yyyy-MM-dd')"/>
    
        <!--Transform to bytes-->
        <int-file:file-to-bytes-transformer />
    
        <!--Publish to RabbitMq-->
        <int-amqp:outbound-channel-adapter 
            amqp-template="intCatOmInboundXlsxPublisherRabbitTemplate"
            exchange-name="InboundXlsxMsgSplitter"
            mapped-request-headers="file_name,MsgType"
            lazy-connect="false"/>
    </int:chain>
    
</beans>