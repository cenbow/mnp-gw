<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.5.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!--Handle @Scheduled and @Async annotations -->
	<task:executor id="stpBroadcastMsgListenerExecutor" keep-alive="300"
		pool-size="${rabbitmq.stp-broadcast-consumer.concurrency}" />

	<bean id="stpBroadcastMsgListener" class="cat.mnp.mq.core.MsgListenerScheduler">
		<property name="msgConsumer" ref="stpBroadcastScheduleConsumer" />
	</bean>

	<rabbit:listener-container connection-factory="rabbitMqStpBroadcastScheduledJobConsumerConnectionFactory"
		task-executor="stpBroadcastMsgListenerExecutor" channel-transacted="true" acknowledge="auto"
		requeue-rejected="true" auto-startup="true" concurrency="${rabbitmq.stp-broadcast-consumer.concurrency}">
		<rabbit:listener queue-names="StpBroadcastScheduledJobMsgQ" ref="stpBroadcastMsgListener"
			method="onMessage" />
	</rabbit:listener-container>

	<bean id="stpBroadcastScheduleConsumer" class="cat.mnp.mq.core.MsgConsumer">
		<property name="msgHandler" ref="stpBroadcastMgr" />
		<property name="channelTransacted" value="true" />
		<property name="queue" value="StpBroadcastMsgQ" />
		<property name="prefetchCount" value="6" />
		<property name="waitTimeout" value="1000" />
		<property name="connectionFactory" ref="rabbitMqStpBroadcastConsumerConnectionFactory" />
	</bean>

	<!--stp handlers -->
	<bean id="stpBroadcastMsgHandlerMap" class="java.util.LinkedHashMap">
		<constructor-arg>
			<map key-type="java.lang.String" value-type="cat.mnp.mq.core.MsgHandlerBase">
				<entry key="file" value-ref="stpBroadcastFileGenerator" />
				<!-- <entry key="ws" value-ref="stpBroadcastWsListener" /> -->
			</map>
		</constructor-arg>
	</bean>
	<bean id="stpBroadcastMgr" class="cat.mnp.stp.core.StpBroadcastMgr">
		<property name="stpBroadcastMsgHandlerMap" ref="stpBroadcastMsgHandlerMap" />
		<property name="sessionFactory" ref="mnpcatSessionFactory" />
	</bean>

	<!--Handle Db Session-->
    <aop:config>
        <aop:pointcut id="stpBroadcastMgrMethods" expression="execution(* cat.mnp.stp.core.StpBroadcastMgr.processMsg(..))"/>
        <aop:advisor advice-ref="stpBroadcastMgrMethodsTxAdvice" pointcut-ref="stpBroadcastMgrMethods"/>
    </aop:config>

    <tx:advice id="stpBroadcastMgrMethodsTxAdvice" transaction-manager="mnpcatTxManager">
        <tx:attributes>
            <tx:method name="processMsg" propagation="REQUIRED" read-only="false" timeout="30"/>
            <tx:method name="queryMsg" propagation="REQUIRED" read-only="true" timeout="30"/>
            <tx:method name="splitMsg" propagation="REQUIRED" read-only="true" timeout="30"/>
        </tx:attributes>
    </tx:advice>


</beans>