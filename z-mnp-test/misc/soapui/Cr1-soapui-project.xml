<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="9edcf988-9cb7-4af3-922d-1849e9477afa" activeEnvironment="Default" name="Cr1" resourceRoot="" soapui-version="5.4.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="367d114c-2522-439b-9af8-ab386a65bce9" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://localhost:8080" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>/C1rtGw/api/subscribers/{msisdn}/info/summary</con:endpoint></con:endpoints><con:resource name="Summary" path="/C1rtGw/api/subscribers/{msisdn}/info/summary" id="a0396b6c-7224-49e6-b083-15bbf8b2e413"><con:settings/><con:parameters><con:parameter><con:name>msisdn</con:name><con:value>2222</con:value><con:style>TEMPLATE</con:style><con:default>2222</con:default></con:parameter></con:parameters><con:method name="Summary 1" id="7ac8a1f2-457f-4524-8c57-43ab39b295ef" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:loc="http://localhost/">loc:Response</con:element></con:representation><con:request name="Request 1" id="7361bfee-b3ad-44ca-be62-f3818002b0c9" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8080</con:endpoint><con:request/><con:originalUri>http://localhost/</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="msisdn" value="1234567890" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>msisdn</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:restMockService id="33bdaa73-b977-45b5-8a77-3b1417c5e4bb" port="8080" path="/" host="bgm" name="Cr1MockService"><con:settings/><con:properties/><con:restMockAction name="/C1rtGw/api/subscribers/{msisdn}/info/summary" method="GET" resourcePath="/C1rtGw/api/subscribers/1234567890/info/summary" id="a87cb89d-fc0d-4910-bb13-4ebb11b48253"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="a46d932c-ad0f-4b09-80d6-64397725c119" httpResponseStatus="200" mediaType="application/json"><con:settings/><con:responseContent> {
	 "msisdn": "66882753318",
	 "paymentType": "Prepaid",
	 "languageCode": 1,
	 "ratingStateType": "Active",
	 "activeDate": "2016-08-01T09:05:30.000+0000",
	 "serviceInactiveDate": null,
	 "offerInfoList": [{
			 "id": 51004760,
			 "name": "PO_Prepaid_Standard_Bonus",
			 "description": "my Prepaid Standard Bonus",
			 "termsAndConditions": null,
			 "isPrimary": true,
			 "level": null,
			 "activeDate": "2016-08-01T07:57:54.000+0000",
			 "inactiveDate": null,
			 "offerState": 1
		 },
		 {
			 "id": 51005156,
			 "name": "SO1_Prepaid_my_Super_Kum",
			 "description": "mySuperค้มุ",
			 "termsAndConditions": null,
			 "isPrimary": false,
			 "level": null,
			 "activeDate": "2016-10-05T10:07:05.000+0000",
			 "inactiveDate": null,
			 "offerState": 1
		 },
		 {
			 "id": 51005235,
			 "name": "TSO2_Prepaid_4Gtest_upsell_4G_only",
			 "description": null,
			 "termsAndConditions": "โทรฟรีทกุ เครือข่าย 99 นาที\nเน็ตไม่อนั้ ความเร็ว 384 kbps",
			 "isPrimary": false,
			 "level": null,
			 "activeDate": "2016-11-25T08:32:15.000+0000",
			 "inactiveDate": null,
			 "offerState": 1
		 }
	 ],
	 "coreBalanceInfo": {
		 "id": 654,
		 "name": "CORE",
		 "description": "Balance",
		 "value": 968.623,
		 "rcAwardValue": 0,
		 "expirationDate": "2016-12-26T17:00:00.000+0000",
		 "currencyType": "THB",
		 "unitType": "Money/Currency"
	 },
	 "balanceInfoList": [{
			 "id": 655,
			 "name": "SMS",
			 "description": "SMS Balance",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-08-01T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "SMS"
		 },
		 {
			 "id": 665,
			 "name": "DATA_DURATION",
			 "description": "อินเทอร์เน็ต",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-08-01T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "SECONDS"
		 },
		 {
			 "id": 662,
			 "name": "CURRENCY_PROMOTION",
			 "description": "เงินโบนสั ",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-11-10T17:00:00.000+0000",
			 "currencyType": "THB",
			 "unitType": "Money/Currency"
		 },
		 {
			 "id": 656,
			 "name": "DATA_VOLUME",
			 "description": "อินเทอร์เน็ต",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-11-30T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "OCTET"
		 },
		 {
			 "id": 657,
			 "name": "VOICE",
			 "description": "โทรทกุ เครือข่าย",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-08-01T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "SECONDS"
		 },
		 {
			 "id": 659,
			 "name": "MMS",
			 "description": "MMS",
			 "value": 0,
			 "rcAwardValue": 0,
			 "expirationDate": "2016-08-01T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "MMS"
		 },
		 {
			 "id": 704,
			 "name": "4G DATA VOLUME",
			 "description": "Internet",
			 "value": 1073741824,
			 "rcAwardValue": 1073741824,
			 "expirationDate": "2016-12-25T17:00:00.000+0000",
			 "currencyType": null,
			 "unitType": "OCTET"
		 }
	 ],
	 "cachedDate": "2016-12-08T02:03:40.808+0000"
 }</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>