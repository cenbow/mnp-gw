package org.rtcproject.ws.fxsync;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.8 Generated source
 * version: 2.2
 *
 */
@WebServiceClient(name = "RTC_FX_SYNC", targetNamespace = "http://RTC.org/RTC_FX_SYNC_MSG", wsdlLocation = "RTC_FX_SYNC.wsdl")
public class RTCFXSYNC extends Service {

    private final static URL RTCFXSYNC_WSDL_LOCATION;
    private final static WebServiceException RTCFXSYNC_EXCEPTION;
    private final static QName RTCFXSYNC_QNAME = new QName("http://RTC.org/RTC_FX_SYNC_MSG", "RTC_FX_SYNC");

    static {
        String resourcePath = String.format("../../META-INF/wsdl/RTC_FX_SYNC.%s.wsdl", System.getProperty("spring.profiles.active"));
        URL url = RTCFXSYNC.class.getClassLoader().getResource(resourcePath);
        WebServiceException e = null;
        if (url == null) {
            e = new WebServiceException("Error cannot get resource from " + resourcePath);
        }
        RTCFXSYNC_WSDL_LOCATION = url;
        RTCFXSYNC_EXCEPTION = e;
    }

    public RTCFXSYNC() {
        super(__getWsdlLocation(), RTCFXSYNC_QNAME);
    }

    public RTCFXSYNC(WebServiceFeature... features) {
        super(__getWsdlLocation(), RTCFXSYNC_QNAME, features);
    }

    public RTCFXSYNC(URL wsdlLocation) {
        super(wsdlLocation, RTCFXSYNC_QNAME);
    }

    public RTCFXSYNC(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, RTCFXSYNC_QNAME, features);
    }

    public RTCFXSYNC(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RTCFXSYNC(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns RTCFXSYNCMSGPortType
     */
    @WebEndpoint(name = "RTC_FX_SYNC_MSGSOAP_HTTP_Port")
    public RTCFXSYNCMSGPortType getRTCFXSYNCMSGSOAPHTTPPort() {
        return super.getPort(new QName("http://RTC.org/RTC_FX_SYNC_MSG", "RTC_FX_SYNC_MSGSOAP_HTTP_Port"), RTCFXSYNCMSGPortType.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns RTCFXSYNCMSGPortType
     */
    @WebEndpoint(name = "RTC_FX_SYNC_MSGSOAP_HTTP_Port")
    public RTCFXSYNCMSGPortType getRTCFXSYNCMSGSOAPHTTPPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://RTC.org/RTC_FX_SYNC_MSG", "RTC_FX_SYNC_MSGSOAP_HTTP_Port"), RTCFXSYNCMSGPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (RTCFXSYNC_EXCEPTION != null) {
            throw RTCFXSYNC_EXCEPTION;
        }
        return RTCFXSYNC_WSDL_LOCATION;
    }

}
